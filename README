journalx is a Web Service used to share Journal Entries from
Sugar.

It has a very simple REST API (with JSON) designed by @tch:

Manipulate journal entries
1. GET /entries/ (list entries)
2. POST /entries/ (new entry)
3. POST /entries/:entry_id (update an existing entry)
4. GET /entries/:entry_id (fetch an existing entry)
5. DEL /entries/:entry_id (delete an existing entry)

Manipulate comments associate with a journal entry
1. GET /entries/:entry_id/comments/ (comments for that entry)
2. POST /entries/:entry_id/comments/ (new comment for that entry)
3. DEL /entries/:entry_id/comments/:comment_id (delete an existing comment)

Manipulate your friends lists
1. GET /friends  (your friends list)
2. GET /friends/:friend_id  (a friend's details)
3. GET /friends/:friend_id/entries (friend entries)

== Running the service ==

What you'll need (in Fedora):

* python-django (tested with version 1.4)
* python-imaging (for uploaded screenshots)
* MySQL-python

Steps:

1) create the journalx db (i.e.: create database journalx)
2) update the DB config in journalx/settings.py
3) run:

   ./manage.py syncdb

4) see if tests pass:

   ./manage.py test entries_svc

5) run the server:

   ./manage.py runserver

== Admin module ==
You can use the admin module to add/delete entries:

1) create an admin via:

   ./manage.py createsuperuser --username=foo

2) log into http://localhost:8000/admin

== Testing the API with Curl ==
Authentication happens through the X-Sugar-Buddy HTTP header.

1) request entries:

   curl -H 'X-Sugar-Buddy: walter' http://localhost:8000/entries

2) Create an entry:

  curl \
   -H 'X-Sugar-Buddy: walter' \
   -F  screenshot=@/tmp/tincho.jpg \
   -F title='my entry' \
   -F desc='something' \
     http://localhost:8000/entries/

3) Get an entry:

  curl \
   -H 'X-Sugar-Buddy: walter' \
   http://localhost:8000/entries/1

4) Delete an entry:

  curl \
   -H 'X-Sugar-Buddy: walter' \
   -X DELETE \
   http://localhost:8000/entries/1

5) Update an entry:

  curl \
   -H 'X-Sugar-Buddy: walter' \
   -F  screenshot=@/tmp/tincho-reloaded.jpg \
   -F title='my update entry' \
   -F desc='something new' \
     http://localhost:8000/entries/2

6) Get comments for an entry:

  curl \
   -H 'X-Sugar-Buddy: walter' \
   http://localhost:8000/entries/1

7) Add a comment to an entry:

  curl \
    -H 'X-Sugar-Buddy: walter' \
    -X POST \
    -F text=hola \
    http://localhost:8000/entries/2/comments/

8) Delete a comment from an entr:

  curl \
    -H 'X-Sugar-Buddy: walter' \
    -X DELETE \
    http://localhost:8000/entries/2/comments/1


== Deploying with Apache ==

1) setup Apache with mod_wsgi

2) edit apache/django.wsgi

3) add a VirtualHost config file with (something like):

  <VirtualHost *:80>
        ServerName journalx.domain.tld
        UseCanonicalName        Off
        WSGIScriptAlias / /path/to/journalx/apache/django.wsgi
        CustomLog /var/log/apache2/journalx-access.log
        ErrorLog /var/log/apache2/journalx-error.log
  </VirtualHost>
